services:
  db:
    container_name: ${POSTGRES_HOST}
    image: postgres:17
    env_file: .env
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - hypertube_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    container_name: hypertube
    build:
      context: .
      dockerfile: ./apps/Dockerfile
    env_file: .env
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
      - "${CLIENT_PORT}:${CLIENT_PORT}" # for development only
    volumes:
      - ./apps:/hypertube/apps
      - ./node_modules:/hypertube/node_modules
      - ./apps/server/node_modules:/hypertube/apps/server/node_modules
      - ./apps/client/node_modules:/hypertube/apps/client/node_modules
      - ./apps/libs/node_modules:/hypertube/apps/libs/node_modules
    depends_on:
      db:
        condition: service_healthy
    command: bash -c "umask 000 && pnpm i --frozen-lockfile && pnpm --filter server prisma:migrate && chmod -R 777 /hypertube && pnpm dev"
    healthcheck:
      test: ["CMD", "curl", "-f", "${SERVER_URL}/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  adminer:
    container_name: hypertube_adminer
    image: adminer
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy

volumes:
  hypertube_data:
